AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Briefly FastAPI 백엔드

Globals:
  Function:
    Timeout: 900
    Runtime: python3.12
    MemorySize: 1024  # 클러스터링 작업을 위해 512MB → 1024MB 증가

Resources:
  ## ✅ FastAPI 메인 API
  BrieflyApi:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: briefly-api
      Handler: app.main.handler
      CodeUri: .
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
      Environment:
        Variables:
          KAKAO_CLIENT_ID: "2283f292bd65f9faff9289e4abd91920"
          ELEVENLABS_API_KEY: "sk_9aec564dd6ea4d9fbc70a0c3532b3e8ab96a9b38d2721b80"
          ELEVENLABS_VOICE_ID: "TX3LPaxmHKxFdv7VOQHJ"
          OPENAI_API_KEY: "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"
          DEEPSEARCH_API_KEY: "68a6b087430941b2a171fc071855bc4e"
          DDB_NEWS_TABLE: NewsCards
          DDB_FREQ_TABLE: Frequencies
          DDB_USERS_TABLE: Users
          DDB_BOOKMARKS_TABLE: Bookmarks
          S3_BUCKET: briefly-news-audio
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonS3FullAccess
        - AWSLambdaBasicExecutionRole

  ## ✅ 매일 06시 실행 Lambda
  DailyBrieflyTask:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: daily-briefly-task
      Handler: app.tasks.scheduler.lambda_handler
      CodeUri: .
      Timeout: 900
      MemorySize: 1024  # 클러스터링 작업을 위해 512MB → 1024MB 증가
      Events:
        DailyTrigger:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 * * ? *) # KST 6시
            Name: daily-briefly-task-rule
            Description: 매일 6시 뉴스 요약 및 주파수 음성 생성
      Environment:
        Variables:
          KAKAO_CLIENT_ID: "2283f292bd65f9faff9289e4abd91920"
          ELEVENLABS_API_KEY: "sk_9aec564dd6ea4d9fbc70a0c3532b3e8ab96a9b38d2721b80"
          ELEVENLABS_VOICE_ID: "TX3LPaxmHKxFdv7VOQHJ"
          OPENAI_API_KEY: "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"
          DEEPSEARCH_API_KEY: "68a6b087430941b2a171fc071855bc4e"
          DDB_NEWS_TABLE: NewsCards
          DDB_FREQ_TABLE: Frequencies
          DDB_USERS_TABLE: Users
          DDB_BOOKMARKS_TABLE: Bookmarks
          S3_BUCKET: briefly-news-audio
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonS3FullAccess
        - AWSLambdaBasicExecutionRole

  ## ✅ NewsCards 테이블
  NewsCardsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: NewsCards
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: news_id
          AttributeType: S
        - AttributeName: category_date
          AttributeType: S
      KeySchema:
        - AttributeName: news_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: category_date-index
          KeySchema:
            - AttributeName: category_date
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  ## ✅ Frequencies 테이블 (공유 구조)
  FrequenciesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Frequencies
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: frequency_id
          AttributeType: S
      KeySchema:
        - AttributeName: frequency_id
          KeyType: HASH

  ## ✅ Users 테이블 (profile_image, created_at 추가)
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH

  ## ✅ Bookmarks 테이블
  BookmarksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Bookmarks
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: news_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: news_id
          KeyType: RANGE 